/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-06-25 12:01:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fileList_html extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <title>学生信息列表</title>\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"../lib/layui-v2.6.3/css/layui.css\" media=\"all\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/public.css\" media=\"all\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div class=\"layuimini-container\">\n");
      out.write("    <div class=\"layuimini-main\">\n");
      out.write("        <script type=\"text/html\" id=\"toolbarDemo\">\n");
      out.write("           <h3>毕业实习管理系统数据导库模板下载</h3>\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        <table class=\"layui-hide\" id=\"currentTableId\" lay-filter=\"currentTableFilter\"></table>\n");
      out.write("\n");
      out.write("        <script type=\"text/html\" id=\"currentTableBar\">\n");
      out.write("            <a class=\"layui-btn layui-btn-normal layui-btn-xs data-count-edit\" lay-event=\"edit\">下载</a>\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<script src=\"../lib/layui-v2.6.3/layui.js\" charset=\"utf-8\"></script>\n");
      out.write("<script>\n");
      out.write("    layui.use(['form', 'table'], function () {\n");
      out.write("        var $ = layui.jquery,\n");
      out.write("            form = layui.form,\n");
      out.write("            table = layui.table;\n");
      out.write("\n");
      out.write("        table.render({\n");
      out.write("            elem: '#currentTableId',\n");
      out.write("            url: '../api/files.json',\n");
      out.write("            toolbar: '#toolbarDemo',\n");
      out.write("            defaultToolbar: ['filter', 'exports', 'print', {\n");
      out.write("                title: '提示',\n");
      out.write("                layEvent: 'LAYTABLE_TIPS',\n");
      out.write("                icon: 'layui-icon-tips'\n");
      out.write("            }],\n");
      out.write("            cols: [[\n");
      out.write("                {field: 'id', width: 200, title: 'ID', sort: true},\n");
      out.write("                {field: 'filename', width: 250, title: '文件名称'},\r\n");
      out.write("\t\t\t\t\t\t\t\t{field: 'url', width: 200, title: '文件下载地址'},\n");
      out.write("                {field: 'remarks', width: 500, title: '文件使用说明'},\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle: '操作',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tminWidth: 100,\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttoolbar: '#currentTableBar',\r\n");
      out.write("\t\t\t\t\t\t\t\t\talign: \"center\"\r\n");
      out.write("\t\t\t\t\t\t\t\t}\n");
      out.write("            ]],\n");
      out.write("            limits: [10, 15, 20, 25, 50, 100],\n");
      out.write("            limit: 10,\n");
      out.write("            page: true,\n");
      out.write("            skin: 'line'\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        table.on('tool(currentTableFilter)', function (obj) {\n");
      out.write("            var data = obj.data;\r\n");
      out.write("\t\t\t\t\t\tvar jsonOb = JSON.stringify(data);\r\n");
      out.write("\t\t\t\t\t\tvar dataOb = JSON.parse(jsonOb);\r\n");
      out.write("            if (obj.event === 'edit') {\n");
      out.write("                var index = layer.open({\n");
      out.write("                    title: '下载文件',\n");
      out.write("                    type: 2,\n");
      out.write("                    shade: 0.2,\n");
      out.write("                    maxmin:false,\n");
      out.write("                    shadeClose: true,\n");
      out.write("                    area: ['50%', '60%'],\n");
      out.write("                    content: dataOb.url,\n");
      out.write("                });\r\n");
      out.write("\t\t\t\t\t\t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\t\t\t\t\t\t  layer.full(index);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tparent.location.reload();\r\n");
      out.write("\t\t\t\t\t\t\t\t}, 3000);\r\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
